@{
    ViewData["Title"] = "Home Page";
}

@model List<Product>


<div class="w-lg-25 container">
    @Html.Partial("~/Views/_partialView/_header.cshtml")
</div>

<div class="container mt-3 p-5">
    <div class="d-flex justify-content-lg-between">
        <section class="hero text-black ">
            <div class="container">
                <div class="bg-display p-3 rounded-border w-50 d-flex justify-content-around text-primary my-5">
                  <span> More than Faster</span>  <img src="~/img/cherry.png"/>
                </div>
                <h1 class="title-text"><span >Welcome</span> to University Catering System       </h1>
                <p class="fs-2 me-5 my-3 text-black">Order delicious <span class="color-text">food</span> for your events and occasions with ease.</p>
                <a href="#" class="btn btn-primary rounded-border px-3 py-2">Explore Menu</a>
            </div>
        </section>
        <div class="d-none d-lg-block">
                <img src="~/img/food.png" class="app-image"/>
            </div>
      

    </div>
 
    <div class="container">
        <h2 class="text-center my-4">Our Menu</h2>
        <!-- Bootstrap Carousel -->
        <div id="loading-spinner"></div>
    </div>
    <div class="container p-4">
        <div class="d-flex justify-content-center gap-2">  
            <div class="form-group w-50 mb-5">
                <input type="text" id="myInput"  class="form-control py-3"/>
            </div>
            <div class="form-group">
                <button class="btn btn-primary form-control py-3 px-5" id="searchBtn">search</button>
            </div>
       </div>
        <section class="row product-list">  
        </section>
    </div>
   
</div>

<script>
    let loading = document.getElementById("loading-spinner");
    let page = 1;
    let query = '';
    let loadingMore = false;

    window.addEventListener("load", () => {
        loadProducts(query, page);
    });

    document.getElementById("searchBtn").addEventListener('click', function(){
        query = $("#myInput").val();
        page = 1;
        $(".product-list").empty(); // Clear the product list
        loadProducts(query, page);
    });

    window.addEventListener('scroll', () => {
        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 200 && !loadingMore) {
            loadingMore = true;
            page++;
            loadProducts(query, page);
        }
    });

    function loadProducts(query, page) {
        loading.classList.add("d-block");
        $.ajax({
            type: "Get",
            url: `/Home/GetProducts?query=${query}&page=${page}`,
            contentType: "application/json; charset=utf-8",
            success: function (data, status, xhr) {
                loading.classList.add("d-none");
                loadingMore = false;
                var productTable = $(".product-list");
                $.each(data.result, function (index, product) {
                    productTable.append(`
                        <div class="col-md-4 mb-3" id="clickAdd" onclick="addToCart(${product.id})" data-id="${product.id}">
                            <div class="card card-list">
                                <img src="${product.imageUrl}" class="card-img-top" alt="Product Image" style="height: 400px; object-fit: cover; object-position: center;">
                                <div class="card-body text-center">
                                    <p class="card-text my-3 text-danger bold"> ${formatCurrency(product.price)}</p>
                                    <h4 class="card-title">${product.name}</h4>
                                    <p class="card-text my-3">${product.description}</p>
                                </div>
                            </div>
                        </div>
                    `);
                });
            },
            error: function (xhr, status, error) {
                loading.classList.add("d-none");
                $("#dataDiv").html("Result: " + status + " " + error + " " + xhr.status + " " + xhr.statusText);
            }
        });
    }

    function addToCart(id) {
        window.location.href = `/cart/food/${id}`;
    }

    function autocomplete(inp, url) {
        var currentFocus;
        loading.classList.add("d-block");
        inp.addEventListener("input", function (e) {
            var val = this.value;
            if (!val) {
                closeAllLists();
                return false;
            }

            fetchSuggestions(val, function (suggestions) {
                closeAllLists();
                if (!suggestions.result || suggestions.result.length === 0) return false;
                currentFocus = -1;

                var a = document.createElement("DIV");
                a.setAttribute("id", inp.id + "autocomplete-list");
                a.setAttribute("class", "autocomplete-items");
                inp.parentNode.appendChild(a);

                suggestions.result.forEach(function (item) {
                    var b = document.createElement("DIV");
                    loading.classList.add("none");
                    var matchStart = item.name.toUpperCase().indexOf(val.toUpperCase());
                    b.innerHTML = item.name.substr(0, matchStart) + "<strong>" + item.name.substr(matchStart, val.length) + "</strong>" + item.name.substr(matchStart + val.length);
                    b.innerHTML += "<input type='hidden' value='" + item.name + "'>";
                    b.addEventListener("click", function (e) {
                        inp.value = this.getElementsByTagName("input")[0].value;
                        closeAllLists();
                    });
                    a.appendChild(b);
                });
            });
        });

        inp.addEventListener("keydown", function (e) {
            var x = document.getElementById(this.id + "autocomplete-list");
            if (x) x = x.getElementsByTagName("div");
            if (e.keyCode == 40) {
                currentFocus++;
                addActive(x);
            } else if (e.keyCode == 38) {
                currentFocus--;
                addActive(x);
            } else if (e.keyCode == 13) {
                e.preventDefault();
                if (currentFocus > -1) {
                    if (x) x[currentFocus].click();
                }
            }
        });

        function fetchSuggestions(query, callback) {
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var suggestions = JSON.parse(xhr.responseText);
                    callback(suggestions);
                }
            };
            xhr.open("GET", url + "?query=" + encodeURIComponent(query), true);
            xhr.send();
        }

        function addActive(x) {
            if (!x) return false;
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            x[currentFocus].classList.add("autocomplete-active");
        }

        function removeActive(x) {
            for (var i = 0; i < x.length; i++) {
                x[i].classList.remove("autocomplete-active");
            }
        }

        function closeAllLists(elmnt) {
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
        }

        document.addEventListener("click", function (e) {
            closeAllLists(e.target);
        });
    }

    autocomplete(document.getElementById("myInput"), '@Url.Action("GetSearchable", "Home")');

    function formatCurrency(value) {
        return new Intl.NumberFormat('en-GB', {
            style: 'currency',
            currency: 'GBP'
        }).format(value);
    }
</script>


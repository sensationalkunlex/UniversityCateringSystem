@model CartItem

<section id="pdp" class="container ">
    <div class="w-lg-25 container mb-5">
        @Html.Partial("~/Views/_partialView/_header.cshtml")
    </div>
    <div class="product-name mb-5">
        <a href="/">Shop</a> >
        @Model.ProductName
    </div>
   <div class="row mt-5 vh-75">
       <div class="col-md-6">
           <img src="@Model.ImageUrl" class="w-100 mb-5 img-food"/>
       </div>
        <div class="col-md-6">
            <div class="m-5 d-flex flex-column justify-content-center align-content-center">
                <h3 class="my-4">
                    @Model.ProductName
                </h3>
                <h5 class="mb-4 text-danger">
                    @string.Format(System.Globalization.CultureInfo.GetCultureInfo("en-GB"), "{0:C}", Model.Price)
                </h5>
                <div class="d-flex flex-column mb-4">
                    <div class="mb-1">
                        Quantity
                    </div>
                    <input type="number" min="1" size="4" step="1" class="form-control py-3 qty-w" value="@Model.Quantity" id="input-quantity" />
                </div>
                <div>
                    <button class="btn btn-outline-danger w-75 py-3" id="add-cart">
                        ADD TO CART
                    </button>
                </div>
            </div>
        </div>
   </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        document.getElementById('add-cart').addEventListener('click', function() {
            var productId = @Model.ProductId;
            var quantity = document.getElementById('input-quantity').value;
            if (quantity < 1) {
                // Uncomment and configure toastr or another notification system if needed
                toastr.error("UNABLE TO ADD ITEM", "You must add a quantity greater than zero.");
               
                return;
            }

            var data = {
                productId: productId,
                quantity: quantity
            };

            fetch('/Cart/AddToCartUpdate', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }

                return response.json();
            })
            .then(data => {
                // Handle success response
                toastr.success('Food added to cart successfully!');
                 GetCartUpdate();
            })
            .catch(error => {
                // Handle error response
                console.error('There was an error adding the product to the cart:', error);
                toastr.error('There was an error adding the product to the cart.');
            });
        });
    });

   
   function GetCartUpdate() {

        $.ajax({
            type: "Get",
            url: "/Home/GetCart",
            contentType: "application/json; charset=utf-8",
            success: function (result, status, xhr) {
                document.getElementById("cartCount").innerHTML = result.length;
            },
            error: function (xhr, status, error) {
                 $("#dataDiv").html("Result: " + status + " " + error + " " + xhr.status + " " + xhr.statusText)
            }
        });

    }
  </script>
